{# Tap and Write Tab (Elkonin boxes

input soundBox.color, soundBox.count, soundBox.boxSize
#}
{% block WriteTab %}
    {% from "macros.html.twig" import tabHeader  %}

    {% set count = soundBox.count  ?? 3 %}
    {% set color = soundBox.color ?? '#00aabe' %}
    {% set colorSet = ['#00aabe', '#ff625b', '#f5cf62', '#f39d66', '#a7d163'] %}

    {% if color == 'random' %}
        {% set randColor = random(colorSet) %}
        {% set colors = [randColor, randColor, randColor, randColor, randColor] %}
    {% else %}
        {% set colors = [color, color, color, color, color] %}
    {% endif %}


    <div class="container bg-white mx-2 pt-1" id="{{ tabId }}-container" style="max-width: 800px; width:95%">
        {# <div id="write-tab-container" class="container" style="max-width: 600px; width:95%"> #}
        <div class="row d-flex justify-content-start p-2 align-item">
            {{ tabHeader(tabInfo, lesson.wordLists.mastery|join(' ')) }}
        </div>

        <!-- -------------- BUTTONS SECTION START ----------------------------- -->
        <div class="row d-flex justify-content-center ">

            {# DROPDOWN BUTTON -- COLOR #}
            <div class="btn-group my-3 mx-1 p-0 dropdown-">
                <button id="color-button" type="button" class="btn-readxyz dropdown-toggle button-text" data-toggle="dropdown"
                        aria-haspopup="true" aria-expanded="false" style="border:none;">Color
                </button>
                <div class="dropdown-menu" aria-labelledby="color-button">
                    <a class="dropdown-item color-click" href="#">
                        <i class="fas fa-circle fa-2x" style="color:#00aabe"></i>
                    </a>
                    <a class="dropdown-item color-click" href="#">
                        <i class="fas fa-circle fa-2x" style="color:#ff625b"></i>
                    </a>
                    <a class="dropdown-item color-click" href="#">
                        <i class="fas fa-circle fa-2x" style="color:#f5cf62"></i>
                    </a>
                    <a class="dropdown-item color-click" href="#">
                        <i class="fas fa-circle fa-2x" style="color:#f39d66"></i>
                    </a>
                    <a class="dropdown-item color-click" href="#">
                        <i class="fas fa-circle fa-2x" style="color:#a7d163"></i>
                    </a>
                </div>
            </div>

            {# DROPDOWN BUTTON -- COUNT #}
            <div class="btn-group  my-3 mx-1 p-0 ">
                <button id="count-button" type="button" class="btn-readxyz dropdown-toggle button-text"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="border:none; width:var(--button-width)">Count
                </button>
                <div class="dropdown-menu" aria-labelledby="count-button">
                    <a class="dropdown-item count-click" href="#"><span class="h3">3</span></a>
                    <a class="dropdown-item count-click" href="#"><span class="h3">4</span></a>
                    <a class="dropdown-item count-click" href="#"><span class="h3">5</span></a>
                    <a class="dropdown-item count-click" href="#"><span class="h3">6</span></a>
                    <a class="dropdown-item count-click" href="#"><span class="h3">7</span></a>
                </div>
            </div>

            {# BUTTON -- RESET #}
            <div class="btn-group  my-3 mx-1 p-0 ">
                <button type="button" class="btn-readxyz px-2 button-text"
                        onclick="soundBox.reload()"
                        style="border:none; width:var(--button-width);">Reset
                </button>
            </div>
        </div>
        <!-- -------------- BUTTONS SECTION END ----------------------------- -->

        {# ROW -- BALLS (Start) #}
        <div class="row d-flex justify-content-center flex-nowrap">
            {% for i in range(0,count -1) %}
                <div class="ball--border">
                    <div id="ball-{{ i }}" class="m-0 pt-1 ball" onclick="soundBox.moveLowerBall('{{ i }}')">
                        <i class="fas fa-circle  tac" style="font-size: var(--ball-size);"></i>
                    </div>
                </div>
            {% endfor %}
        </div>
        {# ROW -- BALLS (End) #}

        {# ROW -- RECEPTACLE BOXES (End) #}
        <div id="tile-instructions" class="row d-flex justify-content-center instruct-size mx-3 my-1" style="visibility: hidden">
            Use replace or append buttons in each box to control to copy the selected letter to a box.
        </div>

        {# ROW -- RECEPTACLE BOXES (Start) #}
        <div class="row d-flex justify-content-center">
            {% for i in range(0,count - 1) %}

                {% set letterType = (i == 1) ? 'vowel' : 'consonant' %}
                <div>
                    <div id="big-box-{{ i }}" class="box box--border p-0 d-flex flex-nowrap">
    {#                    <div  id="actions-{{ i }}"#}
    {#                         class="col col-4 m-0 h-100 d-flex flex-column justify-content-between" #}
    {#                          style="padding: 0 0 0 3px " onclick="">#}
    {#                        <button id="eraser-{{ i }}" class="btn btn-white w-100" onclick="soundBox.erase('{{ i }}')"#}
    {#                                type="button">#}
    {#                            <i class="fa fa-eraser text-readlite" data-toggle="tooltip"#}
    {#                               title="Erase all letters in the box"></i>#}
    {#                        </button>#}
    {#                        <button id="appender-{{ i }}" class="btn btn-white w-100" type="button"#}
    {#                                onclick="soundBox.appendLetter('{{ i }}')">#}
    {#                            <i class="fa fa-plus text-readlite"#}
    {#                               data-toggle="tooltip" title="Append the selected letter to the letters in the box"></i>#}
    {#                        </button>#}
    {#                    </div>#}
                        <div class="col col-8 m-0 p-0 h-100 flex-column" id="upper-ball-and-tile-{{ i }}">
                            <div class="justify-content-center flex-column d-flex h-75" >
                                <i id="uball-{{ i }}" class="fa fa-circle ball tac" style="visibility: hidden"
                                onclick="soundBox.moveUpperBall('{{ i }}')"></i>
                            </div>
                            <div class="justify-content-center flex-column d-flex h-25" id="tile-holder-{{ i }}">
                                <span id="box-letters-{{ i }}" class="tac upper-letter-tile"></span>
                            </div>
                        </div>
                    </div>
                    <div class="text-center">
                        <i class="fa fa-plus text-readxyz pr-2" style="cursor:pointer;"onclick="soundBox.selectBox({{ i }})"></i>
                        <i class="fa fa-eraser text-readxyz pl-2" style="cursor:pointer;" onclick="soundBox.erase({{ i }})"></i>
                    </div>
                </div>
            {% endfor %}
        </div>
        {# ROW -- RECEPTACLE BOXES (End) #}

        {# ROW -- INSTRUCTIONS #}
        <div class="row d-flex justify-content-center instruct-size mt-2">
{#            Click on a ball or a tile to move it into the box. Click the erase button to erase the letters in a box.#}
        </div>

        <div class="row d-flex flex-wrap py-3 pl-3">
            {% for letter in soundLetters %}
                {% set vc = (letter|first in ['a','e','i','o','u']) ? 'tile-vowel' : 'tile-consonant' %}
                <div id="tile-{{ letter }}" class="tile mb-2 {{ vc }} d-flex align-items-center justify-content-center"
                     style="margin:3px !important;" onclick="soundBox.tileClicked('{{ letter }}')">
                    <div id="cvc-{{ letter }}" class="m-auto tile-letter" >{{ letter }}</div>
                </div>
            {% endfor %}
        </div>
        <div id="sound-box-lesson-name" style="display: none">{{ lesson.lessonId }}</div>
    </div>

{% endblock WriteTab %}
