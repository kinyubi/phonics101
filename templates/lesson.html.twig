{#

   $navbar          -> menu             set with $document->addToNavbar() or $doucment->addLinkToNavBar()
   $tabArray        -> tabs             add a tab with $document->writeTab(title, html)
   $initialTabName  -> initialTabName   set with $document->setInitialTab(tabName)

handled in base.html.twig
   $errorMessage    -> errorMessage     set with $document->appendToErrorMessage(html)
   $systemMessage   -> systemMessage    set with $document->appendToSystemMessage(html)

Optional Arguments
    studentName (LessonPage)
    bodyBackgroundClass (LessonPage)

   The HTML returned from the TwigFactory::renderBlock call is put into the variable $content.
   $args is set to ['content' => $content. The call to TwigFactory::renderTemplate is as follows:
       TwigFactory::renderTemplate('base.html.twig', $args)
#}

{# variable consumed by body block
    errorMessage:
    systemMessage:
    initialTabName: Title of the tab to be initially displayed (defaults to first tab)
    pageTitle: array of titles
    menu: array of menu items (key value pairs of title=>link)
    isSmallScreen

    For a tabbed page
    -----------------
    tabs associative array: key is tab title, value is html

    For an untabbed page you can create another block template for the body block and use that
#}

{# inherited blocks: title, modals, navBar, tabBar, body, otherJS #}

{% extends 'base.html.twig' %}

{% block otherStyles %}
  <link rel="stylesheet" href="/pdfflip/pflip/css/pdfflip.css">
  <style>
  {{ include('tabs/sound_box_root.css.twig') }}
  </style>
  <link rel="stylesheet" href="/css/sound_box.css">



{% endblock otherStyles %}

{% block otherScripts %}
  {% set cssJsVer = '1.0407.0' %}
 	<script src="/js/timers.js?ver={{ cssJsVer }}"></script>
  <script src="/js/sound_box.js?ver={{ cssJsVer }}"></script>
 	<script src="/pdfflip/pflip/js/pdfflip.js"></script>
{% endblock otherScripts %}

{# The tab bar displays the home button and tab buttons #}
{% block tabBar %}
  <div class="container-fluid p-0 bg-white" id="lesson-container" >
    <div id="tab-bar" class="row m-0 p-0 justify-content-start bg-readlite" style="width: auto;">
      {% set visibleTab = (initialTabName is empty) ? (lesson.tabNames|first|lower) : initialTabName|lower %}

      {# TAB BAR #}
      <nav>
        <div class="nav nav-tabs bg-tab bg-readlite" id="nav-tab" role="tablist" >
          <a class=" p-2 size--tab-icon " id="lessons-home-link" href="/lessons" style="text-decoration: none !important;">
            <div class="d-flex flex-column justify-content-between">
              <img src="/images/tabs/home.png" alt="home" height="60%" width="60%" class="m-auto "/>
              <div class="text-white m-auto nodec sfp pt-1" style="vertical-align: bottom">Home</div>
            </div>
          </a>
          {% for tabId in lesson.tabNames %}
            {% set tabInfo = tabTypes.get(tabId) %}
            {% set active = (tabId == visibleTab|lower) ? 'active' : '' %}
            {% set selected = (tabId == visibleTab|lower) ? 'true' : 'false' %}
            {% set tabElemId = tabId ~ '-tab' %}
            {% set body = tabId ~ '-body' %}
            <a class=" nav-item p-2 {{ active }} size--tab-icon " data-toggle="tab" id="{{ tabElemId }}"
               href="#{{ body }}" role="tab" aria-controls="{{ body }}" style="text-decoration: none !important;">
              <div class="d-flex flex-column ">
                <img src="{{ tabInfo.imageFile }}" alt="{{ tabInfo.tabDisplayAs }}"
                     height="60%" width="60%" class="m-auto"/>
                <div class="text-white mx-auto nodec sfp pt-1" style="vertical-align: bottom">
                  {{ tabInfo.tabDisplayAs }}
                </div>
              </div>
            </a>
          {% endfor %}
          {% if lesson.book %}
            {% set url = '/pdfflip/' ~ lesson.book ~ '.pdf' %}
            {% set bgImage = 'url(/images/tabs/book.png)' %}
            <a class="nav-item  p-2 _PDFF_link size--tab-icon" id="lessons-book-link" source="{{ url }}" style="text-decoration: none !important;">
              <div class="d-flex flex-column">
                <img src="/images/tabs/book.png" alt="home" height="60%" width="60%" class="m-auto "/>
                <div class="text-white m-auto nodec sfp pt-1" style="vertical-align: bottom">Storytime</div>
              </div>
            </a>
          {% endif %}
        </div>
      </nav>
    </div>
    {% endblock tabBar %}

    {% block body %}
    {# TAB CONTENT #}
    {% set visibleTab = (initialTabName is empty) ? (lesson.tabNames|first|lower) : initialTabName|lower %}
    <div class="row d-flex flex-lg-nowrap justify-content-start" id="tabs-container" style="margin:0">
      <div class="tab-content w-100" id="myTabContent">
          {# CONTENT FOR EACH TAB #}
        {% for tabId in lesson.tabNames %}
          {% set tabInfo = tabTypes.get(tabId) %}
          {% set active = (tabId == visibleTab) ? 'show active' : '' %}
          {% set bodyId = tabId ~ '-body' %}
          {% set tabElemId = tabId ~ '-tab' %}
          {% set blockName = tabId|capitalize ~ 'Tab' %}
          {# bring in the appropriate template for each tab #}
          <div id="{{ bodyId }}" class="tab-pane fade {{ active }}" role="tabpanel" aria-labelledby="{{ tabElemId }}" >
            {{ block(blockName, tabId ~ '.html.twig') }}
          </div>
        {% endfor %}
      </div>

    </div>
  </div> {# end container #}
{% endblock body %}


